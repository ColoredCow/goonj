name: e2e-tests

on:
  pull_request:
    types: [labeled]
    branches:
      - main
  schedule:
    - cron: '20 8 * * 1-6'  # Run at 22:00 from Monday to Saturday

jobs:
  # Job for pull request with label 'in review'
  pr-checkout-and-test:
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'in review')
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      BASE_URL_ADMIN_SITE: ${{ secrets.GOONJ_STAGING_SITE_WPADMIN_URL }}
      BASE_URL_USER_SITE: ${{ secrets.GOONJ_STAGING_SITE_URL }}
      USERNAME: ${{ secrets.PLAYWRIGHT_TEST_ADMIN }}
      PASSWORD: ${{ secrets.PLAYWRIGHT_TEST_ADMIN_PASSWORD }}
      ARTIFACT_PASSWORD: ${{ secrets.ARTIFACT_ZIP_PASSWORD }}
      # DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps  
      - name: Run Playwright tests
        run: npx playwright test
      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          report-file: ./playwright-report/results.json
      - name: Install 7-Zip
        run: sudo apt-get install p7zip-full
      - name: Password protect playwright report
        if: always()
        run: |
          mkdir -p ./playwright-protected
          7z a ./playwright-protected/playwright-report.7z ./playwright-report/* -p"$ARTIFACT_PASSWORD"
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./playwright-protected/playwright-report.7z
          retention-days: 7

  # Job for scheduled runs
  scheduled-checkout-and-test:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      BASE_URL_ADMIN_SITE: ${{ secrets.GOONJ_STAGING_SITE_WPADMIN_URL }}
      BASE_URL_USER_SITE: ${{ secrets.GOONJ_STAGING_SITE_URL }}
      USERNAME: ${{ secrets.PLAYWRIGHT_TEST_ADMIN }}
      PASSWORD: ${{ secrets.PLAYWRIGHT_TEST_ADMIN_PASSWORD }}
      ARTIFACT_PASSWORD: ${{ secrets.ARTIFACT_ZIP_PASSWORD }}
      # DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/1272525921995198534/Hh_3ccFsH5I8KGLNZiKUiJk12gLiLsyfks5qk0O0D6H9XKSSTM7vsGPDV6Rkx1paZEvH"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps  
      - name: Run Playwright tests
        run: npx playwright test
      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          report-file: ./playwright-report/results.json
      - name: Take Screenshot of report and Send as Discord Notification
        if: always()
        run: |
          # Take the screenshot of the report
          npx playwright screenshot ./playwright-report/index.html ./playwright-report/report.png
          sleep 5
          # Send the screenshot to Discord
          image_path="./playwright-report/report.png"
          curl -X POST -H "Content-Type: multipart/form-data" \
            -F "file=@$image_path" \
            -F "payload_json={\"content\": \"Test report for scheduled E2E tests.\"}" \
            $DISCORD_WEBHOOK_URL
      - name: Install 7-Zip
        run: sudo apt-get install p7zip-full
      - name: Password protect playwright report
        if: always()
        run: |
          mkdir -p ./playwright-protected
          7z a ./playwright-protected/playwright-report.7z ./playwright-report/* -p"$ARTIFACT_PASSWORD"
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./playwright-protected/playwright-report.7z
          retention-days: 7
