name: e2e-tests
on:
  pull_request:
    types: [ labeled ]
    branches:
      - main
  schedule:
    - cron: '0 22 * * 1-6'  # Run at 22:00 from Monday to Saturday

jobs:
  checkout-and-test:
    if: github.event_name == 'schedule' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'in review'))
    timeout-minutes: 5 #update time to 5 minutes
    runs-on: ubuntu-latest
    env:
      BASE_URL_ADMIN_SITE: ${{ secrets.GOONJ_STAGING_SITE_WPADMIN_URL }}
      BASE_URL_USER_SITE: ${{  secrets.GOONJ_STAGING_SITE_URL }}
      USERNAME: ${{ secrets.PLAYWRIGHT_TEST_ADMIN }}
      PASSWORD: ${{ secrets.PLAYWRIGHT_TEST_ADMIN_PASSWORD }}
      ARTIFACT_PASSWORD: ${{ secrets.ARTIFACT_ZIP_PASSWORD }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps  
    - name: Run Playwright tests
      # run: npx playwright test
      run: npx playwright test play-wright/e2e/volunteer-registration.spec.js
    - uses: daun/playwright-report-summary@v3
      if: always()
      with:
        report-file: ./playwright-report/results.json
    - name: Parse and Post JSON Summary to Discord
      uses: actions/github-script@v6
      if: always()
      with:
        script: |
          const fs = require('fs');
          const path = './playwright-report/results.json';
          const fetch = require('node-fetch');
          const discordWebhookUrl = "https://discord.com/api/webhooks/1272525921995198534/Hh_3ccFsH5I8KGLNZiKUiJk12gLiLsyfks5qk0O0D6H9XKSSTM7vsGPDV6Rkx1paZEvH";
          
          if (fs.existsSync(path)) {
            try {
              const results = JSON.parse(fs.readFileSync(path, 'utf8'));
              let total = 0;
              let passed = 0;
              let failed = 0;
              let skipped = 0;
          
              const calculateResults = (suites) => {
                suites.forEach(suite => {
                  if (suite.suites) {
                    calculateResults(suite.suites);
                  }
                  if (suite.specs) {
                    suite.specs.forEach(spec => {
                      if (spec.tests) {
                        total += spec.tests.length;
                        passed += spec.tests.filter(test => test.status === 'passed').length;
                        failed += spec.tests.filter(test => test.status === 'failed').length;
                        skipped += spec.tests.filter(test => test.status === 'skipped').length;
                      }
                    });
                  }
                });
              };

              calculateResults(results.suites);

              const summary = `
                ## Playwright Test Summary
                - **Total Tests:** ${total}
                - **Passed:** ${passed}
                - **Failed:** ${failed}
                - **Skipped:** ${skipped}
              `;
          
              const discordMessage = {
                content: summary
              };

              fetch(discordWebhookUrl, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(discordMessage)
              }).then(response => {
                if (!response.ok) {
                  throw new Error('Failed to send message to Discord');
                }
              }).catch(error => {
                core.setFailed(`Error sending message to Discord: ${error.message}`);
              });

            } catch (error) {
              core.setFailed(`Error parsing results.json: ${error.message}`);
            }
          } else {
            core.setFailed('results.json file not found.');
          }

    #   if: always()
    #   run: |
    #     # curl -F "file=@./playwright-report/results.json" -F "payload_json={\"content\":\"Test results uploaded\"}" "https://discord.com/api/webhooks/1272525921995198534/Hh_3ccFsH5I8KGLNZiKUiJk12gLiLsyfks5qk0O0D6H9XKSSTM7vsGPDV6Rkx1paZEvH"
    #     curl -F "file=@./test-results/report.html" -F "payload_json={\"content\":\"Test results uploaded\"}" "https://discord.com/api/webhooks/1272525921995198534/Hh_3ccFsH5I8KGLNZiKUiJk12gLiLsyfks5qk0O0D6H9XKSSTM7vsGPDV6Rkx1paZEvH"
    - name: Install 7-Zip
      run: sudo apt-get install p7zip-full
    - name: Password protect playwright report
      if: always()
      run: |
        mkdir -p ./playwright-protected
        7z a ./playwright-protected/playwright-report.7z ./playwright-report/* -p"$ARTIFACT_PASSWORD"
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: ./playwright-protected/playwright-report.7z
        retention-days: 7
    