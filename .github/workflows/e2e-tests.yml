name: e2e-tests
on:
  pull_request:
    types: [ labeled ]
    branches:
      - main
  schedule:
    - cron: '0 22 * * 1-6'  # Run at 22:00 from Monday to Saturday

jobs:
  checkout-and-test:
    if: github.event_name == 'schedule' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'in review'))
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      BASE_URL_ADMIN_SITE: ${{ secrets.GOONJ_STAGING_SITE_WPADMIN_URL }}
      BASE_URL_USER_SITE: ${{  secrets.GOONJ_STAGING_SITE_URL }}
      USERNAME: ${{ secrets.PLAYWRIGHT_TEST_ADMIN }}
      PASSWORD: ${{ secrets.PLAYWRIGHT_TEST_ADMIN_PASSWORD }}
      ARTIFACT_PASSWORD: ${{ secrets.ARTIFACT_ZIP_PASSWORD }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps  
    # - name: Install GitHub Actions Reporter
    #   run: npm install --save-dev @estruyf/github-actions-reporter
    - name: Run Playwright tests
      # run: npx playwright test
      run: npx playwright test play-wright/e2e/volunteer-registration.spec.js
    - name: Install junit-viewer
      run: npm install -g junit-viewer
    - name: Generate XUnit report summary
      run: |
        mkdir -p ./playwright-report
        # Check if the XML file exists
        if [ -f ./playwright-report/results.xml ]; then
          junit-viewer --results=./playwright-report/results.xml --output=./playwright-report/report-summary.md
        else
          echo "Results XML file not found"
          exit 1
        fi
    - name: Upload XUnit report summary
      if: always()
      run: |
        echo "## Playwright Test Report" >> $GITHUB_STEP_SUMMARY
        if [ -f ./playwright-report/report-summary.md ]; then
          cat ./playwright-report/report-summary.md >> $GITHUB_STEP_SUMMARY
        else
          echo "Summary report not found, skipping summary inclusion."
        fi
    # - name: Generate JUnit report summary
    #   run: |
    #     mkdir -p ./playwright-report
    #     junit-viewer --results=./playwright-report/results.xml --output=./playwright-report/report-summary.md
    # - name: Upload JUnit report summary
    #   if: always()
    #   run: |
    #     echo "## Playwright Test Report" >> $GITHUB_STEP_SUMMARY
    #     cat ./playwright-report/report-summary.md >> $GITHUB_STEP_SUMMARY 
    - name: Install 7-Zip
      run: sudo apt-get install p7zip-full
    - name: Password protect playwright report
      if: always()
      run: |
        mkdir -p ./playwright-protected
        7z a ./playwright-protected/playwright-report.7z ./playwright-report/* -p"$ARTIFACT_PASSWORD"
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: ./playwright-protected/playwright-report.7z
        retention-days: 7
    # - name: Upload Report Summary
    #   if: always()
    #   run: |
    #     echo "#### Playwright Test Report" >> $GITHUB_STEP_SUMMARY
    #     echo "[Download protected report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
